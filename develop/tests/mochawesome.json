{
  "stats": {
    "suites": 5,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-10T19:57:10.995Z",
    "end": "2025-06-10T19:57:11.308Z",
    "duration": 313,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aef30650-b2e1-47ef-9249-9dcde7f33441",
      "title": "",
      "fullFile": "/home/runner/work/genderize/genderize/test/lib/index.ts",
      "file": "/test/lib/index.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "25ee4878-8db5-45ad-88a5-63ebcf011dc4",
          "title": "Genderize",
          "fullFile": "/home/runner/work/genderize/genderize/test/lib/index.ts",
          "file": "/test/lib/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9c1bd266-cc97-4ef2-9991-6181867bac86",
              "title": "params()",
              "fullFile": "/home/runner/work/genderize/genderize/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with arrays",
                  "fullTitle": "Genderize params() should work with arrays",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(new Genderize().params([\"Max\",\"Lisa\"],\"DE\").toString(),\"name[]=Max&name[]=Lisa&country_id=DE\")",
                  "err": {},
                  "uuid": "704a8996-34a3-4ddc-9c0c-f2d12ff3c2d9",
                  "parentUUID": "9c1bd266-cc97-4ef2-9991-6181867bac86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with single string",
                  "fullTitle": "Genderize params() should work with single string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(new Genderize().params(\"Max\").toString(),\"name=Max\")",
                  "err": {},
                  "uuid": "50734d6a-e565-4249-9d88-e2b4147b1fd1",
                  "parentUUID": "9c1bd266-cc97-4ef2-9991-6181867bac86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an exception if no name was given",
                  "fullTitle": "Genderize params() should throw an exception if no name was given",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(()=>{new Genderize().params([])},/No name given, but at least one is required/)",
                  "err": {},
                  "uuid": "cb33c584-bad7-4f1a-af23-9268e025364f",
                  "parentUUID": "9c1bd266-cc97-4ef2-9991-6181867bac86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an exception if > 10 names were given",
                  "fullTitle": "Genderize params() should throw an exception if > 10 names were given",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(()=>{new Genderize().params([\"James\",\"Robert\",\"John\",\"Michael\",\"David\",\"William\",\"Richard\",\"Thomas\",\"Christopher\",\"Daniel\",\"Paul\"])},/Too many names given: 11 names provided, but 10 is the maximum allowed/)",
                  "err": {},
                  "uuid": "4eb55e3d-57dd-44d8-9338-db28a567b027",
                  "parentUUID": "9c1bd266-cc97-4ef2-9991-6181867bac86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add the apiKey if given",
                  "fullTitle": "Genderize params() should add the apiKey if given",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(new Genderize(\"hello-world\").params([\"Max\",\"Lisa\"],\"DE\").toString(),\"name[]=Max&name[]=Lisa&country_id=DE&apikey=hello-world\")",
                  "err": {},
                  "uuid": "ddee65ba-f0a5-4c61-af1b-e4242d406e7d",
                  "parentUUID": "9c1bd266-cc97-4ef2-9991-6181867bac86",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "704a8996-34a3-4ddc-9c0c-f2d12ff3c2d9",
                "50734d6a-e565-4249-9d88-e2b4147b1fd1",
                "cb33c584-bad7-4f1a-af23-9268e025364f",
                "4eb55e3d-57dd-44d8-9338-db28a567b027",
                "ddee65ba-f0a5-4c61-af1b-e4242d406e7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c07b30ea-10c4-4a34-ae61-822b95c23c3f",
              "title": "limit()",
              "fullFile": "/home/runner/work/genderize/genderize/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return null if no request was sent before",
                  "fullTitle": "Genderize limit() should return null if no request was sent before",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(new Genderize().limit,null)",
                  "err": {},
                  "uuid": "f51a3c16-82b0-4aef-a096-1ab8eeb3bf40",
                  "parentUUID": "c07b30ea-10c4-4a34-ae61-822b95c23c3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f51a3c16-82b0-4aef-a096-1ab8eeb3bf40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "34ac5283-f75a-4cec-835e-16a533d78c10",
              "title": "getIntHeader()",
              "fullFile": "/home/runner/work/genderize/genderize/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with string",
                  "fullTitle": "Genderize getIntHeader() should work with string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(Genderize.getIntHeader(\"123\"),123)",
                  "err": {},
                  "uuid": "af97c8d8-9455-4486-a55b-5420afc57397",
                  "parentUUID": "34ac5283-f75a-4cec-835e-16a533d78c10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with string[]",
                  "fullTitle": "Genderize getIntHeader() should work with string[]",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(Genderize.getIntHeader([\"123\",\"456\"]),123)",
                  "err": {},
                  "uuid": "92577b5b-d5d1-48ce-b16a-e67afa887c6e",
                  "parentUUID": "34ac5283-f75a-4cec-835e-16a533d78c10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with undefined",
                  "fullTitle": "Genderize getIntHeader() should work with undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(Genderize.getIntHeader(void 0),void 0)",
                  "err": {},
                  "uuid": "08779945-88a2-42ec-becf-ad68d1f4dd0e",
                  "parentUUID": "34ac5283-f75a-4cec-835e-16a533d78c10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af97c8d8-9455-4486-a55b-5420afc57397",
                "92577b5b-d5d1-48ce-b16a-e67afa887c6e",
                "08779945-88a2-42ec-becf-ad68d1f4dd0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "52f5f637-3f03-4096-8642-c218a91eaa6a",
              "title": "detect()",
              "fullFile": "/home/runner/work/genderize/genderize/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with single names",
                  "fullTitle": "Genderize detect() should work with single names",
                  "timedOut": false,
                  "duration": 278,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const g=new Genderize;const result=await g.predict(\"Max\");assert.equal(result.name,\"Max\");assert.equal(result.gender,\"male\");assert.equal(result.gender,GenderizeGender.MALE);assert.ok(result.probability>.9,\"probability > 0.9\");assert.ok(result.count>1e4,\"count > 10000\");assert.ok(g.limit,\"limit is set\");assert.ok(g.limit.limit>0,\"limit > 0\");assert.ok(g.limit.remaining>0,\"remaining > 0\");assert.ok(g.limit.reset instanceof Date,\"reset is a Date\")",
                  "err": {},
                  "uuid": "73127d78-49c0-4b52-902a-bf02f267e6f7",
                  "parentUUID": "52f5f637-3f03-4096-8642-c218a91eaa6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with multiple names",
                  "fullTitle": "Genderize detect() should work with multiple names",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const g=new Genderize;const result=await g.predict([\"Moritz\",\"Lisa\"]);assert.equal(result.length,2);assert.equal(result[0].name,\"Moritz\");assert.equal(result[0].gender,\"male\");assert.equal(result[0].gender,GenderizeGender.MALE);assert.ok(result[0].probability>.9,\"probability > 0.9\");assert.ok(result[0].count>1e4,\"count > 10000\");assert.equal(result[1].name,\"Lisa\");assert.equal(result[1].gender,\"female\");assert.equal(result[1].gender,GenderizeGender.FEMALE);assert.ok(result[1].probability>.9,\"probability > 0.9\");assert.ok(result[1].count>1e4,\"count > 10000\");assert.ok(g.limit,\"limit is set\");assert.ok(g.limit.limit>0,\"limit > 0\");assert.ok(g.limit.remaining>0,\"remaining > 0\");assert.ok(g.limit.reset instanceof Date,\"reset is a Date\")",
                  "err": {},
                  "uuid": "41e0206a-be9c-478e-9825-79cbb7f26e9d",
                  "parentUUID": "52f5f637-3f03-4096-8642-c218a91eaa6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "73127d78-49c0-4b52-902a-bf02f267e6f7",
                "41e0206a-be9c-478e-9825-79cbb7f26e9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.5.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}